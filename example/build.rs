use std::fmt::Write;

use wgsl_to_wgpu::{create_shader_module, MatrixVectorTypes, WriteOptions};

fn main() {
    for name in ["shader", "compute_shader"] {
        println!("cargo:rerun-if-changed=src/{name}.wgsl");
        let wgsl_source = std::fs::read_to_string(format!("src/{name}.wgsl")).unwrap();

        // Generate the Rust bindings and write to a file.
        let mut text = String::new();
        writeln!(&mut text, "// File automatically generated by build.rs.").unwrap();
        writeln!(&mut text, "// Changes made to this file will not be saved.").unwrap();
        text += &create_shader_module(
            &wgsl_source,
            WriteOptions {
                derive_bytemuck_vertex: true,
                derive_encase_host_shareable: true,
                matrix_vector_types: MatrixVectorTypes::Glam,
                rustfmt: true,
                ..Default::default()
            },
        )
        .unwrap();

        std::fs::write(format!("src/{name}.rs"), text.as_bytes()).unwrap();
    }
}
